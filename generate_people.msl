#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct _17
{
    uchar _m0;
    uchar _m1;
    uchar _m2;
    uchar _m3;
    uchar _m4;
    uchar _m5;
};

struct _18
{
    uchar _m0;
    ushort _m1;
    _17 _m2;
};

struct _24
{
    uint _m0[4];
};

struct _25
{
    _18 _m0[1];
};

kernel void generate_people(constant uint* spvBufferSizeConstants [[buffer(25)]], constant _24& _19 [[buffer(0)]], device _25& _20 [[buffer(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    bool _327 = false;
    constant uint& _20BufferSize = spvBufferSizeConstants[1];
    uint _70;
    uint _92;
    uint _102;
    uint _112;
    uint _122;
    do
    {
        _70 = gl_GlobalInvocationID.x;
        float2 _79 = float2(12.98980045318603515625, 78.233001708984375) * float2(float(_70));
        float _333 = _79.x + _79.y;
        float _329 = _333;
        float _84 = fract(sin(_333) * 43758.546875) * 4294967296.0;
        uint _91 = (_84 > 4294967040.0) ? 4294967295u : ((isunordered(_84, 0.0) || _84 < 0.0) ? 0u : uint(_84));
        _92 = _19._m0[0] + _91;
        _102 = _19._m0[1] + _91;
        _112 = _19._m0[2] + _91;
        _122 = _19._m0[3] + _91;
        if (_70 < ((_20BufferSize - 0) / 10))
        {
            break;
        }
        else
        {
            for (;;)
            {
            }
            break; // unreachable workaround
        }
        break; // unreachable workaround
    } while(false);
    uint _138 = _92 + _122;
    uint _149 = _112 ^ _92;
    uint _150 = _122 ^ _102;
    uint _151 = _102 ^ _149;
    uint _152 = _92 ^ _150;
    uint _164 = _152 + _150;
    uint _175 = (_149 ^ (_102 << uint(9))) ^ _152;
    uint _176 = _150 ^ _151;
    uint _177 = _151 ^ _175;
    uint _178 = _152 ^ _176;
    uint _189 = _178 + _176;
    uint _200 = (_175 ^ (_151 << uint(9))) ^ _178;
    uint _201 = _176 ^ _177;
    uint _202 = _177 ^ _200;
    uint _203 = _178 ^ _201;
    uint _213 = _203 + _201;
    uint _224 = (_200 ^ (_177 << uint(9))) ^ _203;
    uint _225 = _201 ^ _202;
    uint _226 = _202 ^ _224;
    uint _227 = _203 ^ _225;
    uint _237 = _227 + _225;
    uint _248 = (_224 ^ (_202 << uint(9))) ^ _227;
    uint _249 = _225 ^ _226;
    uint _250 = _226 ^ _248;
    uint _251 = _227 ^ _249;
    uint _261 = _251 + _249;
    uint _271 = _249 ^ _250;
    uint _273 = _251 ^ _271;
    uint _282 = _273 + _271;
    uint _291 = _271 ^ (_250 ^ ((_248 ^ (_226 << uint(9))) ^ _251));
    uint _292 = _273 ^ _291;
    uint _301 = _292 + _291;
    _20._m0[_70] = _18{ (((_138 + _92) & 1u) == 1u) ? uchar(1) : uchar(0), ushort(ushort(_164 + _152) % ushort(36500)), _17{ uchar(_189 + _178), uchar(_213 + _203), uchar(_237 + _227), uchar(_261 + _251), uchar(_282 + _273), uchar(_301 + _292) } };
    _327 = true;
}

