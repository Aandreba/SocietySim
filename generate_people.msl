#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct _16
{
    uchar _m0;
    uchar _m1;
    uchar _m2;
    uchar _m3;
    uchar _m4;
    uchar _m5;
};

struct _17
{
    uchar _m0;
    ushort _m1;
    _16 _m2;
};

struct _23
{
    uint _m0[4];
};

struct _24
{
    _17 _m0[1];
};

kernel void generate_people(constant uint* spvBufferSizeConstants [[buffer(25)]], constant _23& _18 [[buffer(0)]], device _24& _19 [[buffer(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    bool _326 = false;
    constant uint& _19BufferSize = spvBufferSizeConstants[1];
    uint _69;
    _17 _305;
    do
    {
        _69 = gl_GlobalInvocationID.x;
        float2 _78 = float2(12.98980045318603515625, 78.233001708984375) * float2(float(_69));
        float _332 = _78.x + _78.y;
        float _328 = _332;
        float _83 = fract(sin(_332) * 43758.546875) * 4294967296.0;
        uint _90 = (_83 > 4294967040.0) ? 4294967295u : ((isunordered(_83, 0.0) || _83 < 0.0) ? 0u : uint(_83));
        uint _91 = _18._m0[0] + _90;
        uint _101 = _18._m0[1] + _90;
        uint _121 = _18._m0[3] + _90;
        uint _131 = _91 + _121;
        uint _142 = (_18._m0[2] + _90) ^ _91;
        uint _143 = _121 ^ _101;
        uint _144 = _101 ^ _142;
        uint _145 = _91 ^ _143;
        uint _157 = _145 + _143;
        uint _168 = (_142 ^ (_101 << uint(9))) ^ _145;
        uint _169 = _143 ^ _144;
        uint _170 = _144 ^ _168;
        uint _171 = _145 ^ _169;
        uint _182 = _171 + _169;
        uint _193 = (_168 ^ (_144 << uint(9))) ^ _171;
        uint _194 = _169 ^ _170;
        uint _195 = _170 ^ _193;
        uint _196 = _171 ^ _194;
        uint _206 = _196 + _194;
        uint _217 = (_193 ^ (_170 << uint(9))) ^ _196;
        uint _218 = _194 ^ _195;
        uint _219 = _195 ^ _217;
        uint _220 = _196 ^ _218;
        uint _230 = _220 + _218;
        uint _241 = (_217 ^ (_195 << uint(9))) ^ _220;
        uint _242 = _218 ^ _219;
        uint _243 = _219 ^ _241;
        uint _244 = _220 ^ _242;
        uint _254 = _244 + _242;
        uint _264 = _242 ^ _243;
        uint _266 = _244 ^ _264;
        uint _275 = _266 + _264;
        uint _284 = _264 ^ (_243 ^ ((_241 ^ (_219 << uint(9))) ^ _244));
        uint _285 = _266 ^ _284;
        uint _294 = _285 + _284;
        _305 = _17{ (((_131 + _91) & 1u) == 1u) ? uchar(1) : uchar(0), ushort(ushort(_157 + _145) % ushort(36500)), _16{ uchar(_182 + _171), uchar(_206 + _196), uchar(_230 + _220), uchar(_254 + _244), uchar(_275 + _266), uchar(_294 + _285) } };
        if (_69 < ((_19BufferSize - 0) / 10))
        {
            break;
        }
        else
        {
            for (;;)
            {
            }
            break; // unreachable workaround
        }
        break; // unreachable workaround
    } while(false);
    _19._m0[_69] = _305;
    _326 = true;
}

